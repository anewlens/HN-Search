{"version":3,"sources":["redux/results/types.results.js","redux/results/reducer.results.js","redux/history/types.history.js","redux/history/reducer.history.js","redux/rootReducer.js","redux/store.js","Components/Header/header.component.jsx","redux/results/actions.results.js","utils/queryAPI.utils.js","Components/Inputs/Text/textInput.component.jsx","Components/CustomButton/customButton .component.jsx","Components/Inputs/Radio/radioInput.component.jsx","Components/Search/search.component.jsx","redux/history/actions.history.js","Components/ResultItem/ResultItem-story.component.jsx","Components/ResultItem/ResultItem-comment.component.jsx","Components/ResultItem/resultItem.container.jsx","Components/Results/results.component.jsx","Components/History/history.component.jsx","App.js","index.js"],"names":["ResultsActionTypes","SET_RESULTS","resultsReducer","state","action","type","payload","HistoryActionTypes","ADD_QUERY","INITIAL_STATE","historyReducer","rootReducer","combineReducers","results","history","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","Header","className","setResults","queryAPI","queryTerm","sort","filter","sortBy","filterBy","url","fetch","then","res","json","catch","error","console","log","TextInput","props","CustomButton","children","RadioInput","name","group","checked","onChange","htmlFor","id","value","connect","dispatch","addQueryToHistory","query","addQuery","useState","searchTerm","setSearchTerm","setSort","setFilter","useSelector","onSubmit","e","preventDefault","includes","placeholder","target","map","item","i","key","ResultItemStory","result","title","author","created_at","points","num_comments","story_url","objectID","href","rel","Date","toDateString","ResultItemComment","story_title","comment_text","shortendComment","substring","concat","dangerouslySetInnerHTML","__html","ResultItem","_tags","Results","hits","length","History","useDispatch","term","onClick","err","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb9234f5.chunk.js","sourcesContent":["const ResultsActionTypes = {\r\n    SET_RESULTS: 'SET_RESULTS'\r\n}\r\n\r\nexport default ResultsActionTypes","import ResultsActionTypes from './types.results'\r\n\r\nconst INITIAL_STATE = null\r\n\r\nconst resultsReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case ResultsActionTypes.SET_RESULTS:\r\n            return action.payload\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default resultsReducer","const HistoryActionTypes = {\r\n    ADD_QUERY: 'ADD_QUERY'\r\n}\r\n\r\nexport default HistoryActionTypes","import HistoryActionTypes from \"./types.history\";\r\n\r\nconst INITIAL_STATE = []\r\n\r\nconst historyReducer = (state=INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case HistoryActionTypes.ADD_QUERY:\r\n            return [...state, action.payload]\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default historyReducer","import { combineReducers } from 'redux'\r\nimport resultsReducer from './results/reducer.results'\r\nimport historyReducer from './history/reducer.history'\r\n\r\nconst rootReducer = combineReducers({\r\n    results: resultsReducer,\r\n    history: historyReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport logger from 'redux-logger'\r\n\r\nimport rootReducer from './rootReducer'\r\n\r\nconst middlewares = []\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    middlewares.push(logger)\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)))\r\n\r\nexport default store","import React from 'react' \r\nimport './header.styles.scss'\r\n\r\nconst Header = () => (\r\n    <header className=\"header\">\r\n        <h1 className=\"header-title\">Search Hacker News</h1>\r\n    </header>\r\n)\r\n\r\nexport default Header","import ResultsActionTypes from './types.results'\r\n\r\nexport const setResults = results => ({\r\n    type: ResultsActionTypes.SET_RESULTS,\r\n    payload: results\r\n})\r\n\r\n","const queryAPI = (queryTerm, sort, filter) => {\r\n    const sortBy = sort === 'date' ? '_by_date' : ''\r\n    const filterBy = filter === 'any' ? '' : `&tags=${filter}`\r\n\r\n    const url = `https://hn.algolia.com/api/v1/search${sortBy}?query=${queryTerm}${filterBy}`\r\n\r\n    return fetch(url)\r\n        .then(res => res.json())\r\n        .catch(error => console.log(error))\r\n}\r\n\r\nexport default queryAPI","import React from 'react' \r\nimport PropTypes from 'prop-types'\r\nimport './textInputs.styles.scss'\r\n\r\nconst TextInput = props => {\r\n\r\n    return (\r\n        <input \r\n            type='text' \r\n            className='textInput' \r\n            {...props} />\r\n    )\r\n}\r\n\r\nTextInput.propTypes = {\r\n    placeholder: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    value: PropTypes.string.isRequired\r\n}\r\n\r\nexport default TextInput","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './customButton.styles.scss'\r\n\r\nconst CustomButton = props => (\r\n    <button {...props} className='customButton'>\r\n        {props.children}\r\n    </button>\r\n)\r\n\r\nCustomButton.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default CustomButton","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './radioInput.styles.scss'\r\n\r\nconst RadioInput = ({name, group, checked, onChange}) => (\r\n        <label htmlFor={name} className='radioInput-label'>\r\n            <input \r\n                type=\"radio\" \r\n                id={name} \r\n                value={name} \r\n                name={group} \r\n                checked={checked} \r\n                onChange={onChange} \r\n                className='radioInput'/>\r\n            {name}\r\n        </label>\r\n)\r\n\r\nRadioInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    group: PropTypes.string.isRequired,\r\n    checked: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default RadioInput","import React, { useState } from 'react' \r\nimport { connect, useSelector } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { setResults } from '../../redux/results/actions.results'\r\nimport { addQuery } from '../../redux/history/actions.history'\r\nimport queryAPI from '../../utils/queryAPI.utils'\r\n\r\nimport TextInput from '../Inputs/Text/textInput.component'\r\nimport CustomButton from '../CustomButton/customButton .component'\r\nimport RadioInput from '../Inputs/Radio/radioInput.component'\r\n\r\nimport './search.styles.scss'\r\n\r\nconst Search = ({ setResults, addQueryToHistory }) => {\r\n\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const [sort, setSort] = useState('relevance')\r\n    const [filter, setFilter] = useState('any')\r\n    const history = useSelector(state => state.history)\r\n\r\n    const sortList = ['relevance', 'date']\r\n    const filterList = ['any', 'story', 'comment', 'poll']\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (searchTerm) {\r\n            queryAPI(searchTerm, sort, filter)\r\n                .then(res => {\r\n                    setResults(res)\r\n\r\n                    if (!history.includes(res.query)) {\r\n                        addQueryToHistory(res.query)\r\n                    }\r\n\r\n                    setSearchTerm('')\r\n                })\r\n                .catch(error => console.log(error))\r\n        } \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"search\">\r\n            <span className='search-bar'>\r\n                <TextInput \r\n                    placeholder='article, author, comment...' \r\n                    value={searchTerm}\r\n                    onChange={e => setSearchTerm(e.target.value)} />\r\n\r\n                <CustomButton type='submit'>\r\n                    Search\r\n                </CustomButton>\r\n            </span>\r\n\r\n            <span className='search-radios'>\r\n                Sort By:\r\n                {sortList.map((item, i) => <RadioInput key={i} name={item} group='sort' checked={sort === item} onChange={e => setSort(e.target.value)}/>)}\r\n            </span>\r\n\r\n            <span className='search-radios'>\r\n                Filter:\r\n                {filterList.map((item, i) => <RadioInput key={i} name={item} group='filter' checked={filter === item} onChange={e => setFilter(e.target.value)}/>)}\r\n            </span>\r\n        </form>\r\n    )\r\n}\r\n\r\nSearch.propTypes = {\r\n    setResults: PropTypes.func.isRequired,\r\n    addQueryToHistory: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setResults: results => dispatch(setResults(results)),\r\n    addQueryToHistory: query => dispatch(addQuery(query))\r\n})\r\n\r\nexport default  connect(null, mapDispatchToProps)(Search)","import HistoryActionTypes from \"./types.history\";\r\n\r\nexport const addQuery = query => ({\r\n    type: HistoryActionTypes.ADD_QUERY,\r\n    payload: query\r\n})","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ResultItemStory = ({ result: {title, author, created_at, points, num_comments, story_url, url, objectID} }) => (\r\n        <div className=\"resultItem\" >\r\n                <a href={url || story_url} target='_blank' rel=\"noopener noreferrer\" className=\"resultItem-storyLink\">\r\n                        <h3 className=\"resultItem-title\">{title}</h3>\r\n                        <p className=\"resultItem-byline\">\r\n                                Posted by {author} on {new Date(created_at).toDateString()}\r\n                        </p>\r\n                </a>\r\n                        <span className=\"resultItem-engagement\">\r\n                                <p className=\"resultItem-points\">{points} points</p>\r\n                                <a href={`https://news.ycombinator.com/item?id=${objectID}`} target='_blank' rel=\"noopener noreferrer\"className=\"resultItem-hnLink\">\r\n                                        {num_comments} comments\r\n                                </a>\r\n                        </span>\r\n                </div>\r\n)\r\n\r\nResultItemStory.propTypes = {\r\n        result: PropTypes.shape({\r\n                title: PropTypes.string.isRequired, \r\n                url: PropTypes.string,\r\n                story_url: PropTypes.string, \r\n                author: PropTypes.string.isRequired, \r\n                created_at: PropTypes.string.isRequired, \r\n                points: PropTypes.number, \r\n                num_comments: PropTypes.number.isRequired\r\n        })\r\n}\r\n\r\nexport default ResultItemStory","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ResultItemComment = ({ result: { story_title, story_url, url, author, created_at, points, comment_text, objectID }}) => {\r\n\r\n    const shortendComment = comment_text.substring(0, 240).concat('...')\r\n\r\n    return (\r\n        <div className=\"resultItem\" >\r\n            <a href={url || story_url} target='_blank' rel=\"noopener noreferrer\" className=\"resultItem-storyLink\">\r\n                <h3 className=\"resultItem-heading\">{author} commented on <em>{story_title}</em>:</h3>\r\n            </a>\r\n            <a href={`https://news.ycombinator.com/item?id=${objectID}`} target='_blank' rel=\"noopener noreferrer\" className=\"resultItem-hnLink\" dangerouslySetInnerHTML={{__html: shortendComment}} />\r\n            <footer className=\"resultItem-footer\">\r\n                <p className=\"resultItem-points\">{points ? points : '0'} points</p>\r\n                <p className=\"resultItem-date\">{new Date(created_at).toDateString()}</p>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nResultItemComment.propTypes = {\r\n    result: PropTypes.shape({\r\n        story_title: PropTypes.string, \r\n        url: PropTypes.string,\r\n        story_url: PropTypes.string,\r\n        author: PropTypes.string.isRequired, \r\n        created_at: PropTypes.string.isRequired, \r\n        points: PropTypes.number, \r\n        comment_text: PropTypes.string.isRequired\r\n    })\r\n}\r\n\r\nexport default ResultItemComment","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ResultItemStory from './ResultItem-story.component'\r\nimport ResultItemComment from './ResultItem-comment.component'\r\nimport './resultItem.styles.scss'\r\n\r\nconst ResultItem = ({ result }) => { \r\n    if (result._tags.includes('comment')) {\r\n        return <ResultItemComment result={result}/>\r\n    } else {\r\n        return <ResultItemStory result={result}/>\r\n    } \r\n}\r\n\r\nResultItem.propTypes = {\r\n    result: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ResultItem","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport './results.styles.scss'\r\nimport ResultItem from '../ResultItem/resultItem.container'\r\n\r\nconst Results = () => {\r\n\r\n    const results = useSelector(state => state.results)\r\n\r\n    return (\r\n        <section className=\"results\">\r\n            <h2 className=\"results-title\">\r\n                {results && `Results for \"${results.query}\"`}\r\n            </h2>\r\n\r\n            <div className=\"results-list\">\r\n                {\r\n                    (results.hits.length === 0)\r\n                    ? <p className=\"results-message\">No results for \"{results.query}\"</p>\r\n                    : results.hits.map(result => <ResultItem key={result.objectID} result={result}/>)\r\n                }\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Results","import React from 'react' \r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport './history.styles.scss'\r\nimport queryAPI from '../../utils/queryAPI.utils'\r\nimport { setResults } from '../../redux/results/actions.results'\r\n\r\nconst History = () => {\r\n\r\n    const history = useSelector(state => state.history)\r\n    const dispatch = useDispatch()\r\n\r\n    const queryTermFromHistory = queryTerm => \r\n        queryAPI(queryTerm)\r\n        .then(res => dispatch(setResults(res)))\r\n        .catch(err => console.log(err))\r\n\r\n    return (\r\n        <span className='history'>\r\n            {\r\n                history.map((term, i) => (\r\n                    <p key={i} onClick={() => queryTermFromHistory(term)} className=\"history-term\">\r\n                        {term}\r\n                    </p>\r\n                ))\r\n            }\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default History","import React from 'react';\nimport { useSelector } from 'react-redux'\n\nimport Header from './Components/Header/header.component';\nimport Search from './Components/Search/search.component';\nimport Results from './Components/Results/results.component';\nimport History from './Components/History/history.component';\nimport './App.scss';\n\nfunction App() {\n\n  const results = useSelector(state => state.results)\n  const history = useSelector(state => state.history)\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Search />\n      {!!history.length && <History />}\n      {results && <Results />}\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n     document.getElementById('root')\n)"],"sourceRoot":""}